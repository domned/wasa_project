# Build stage
FROM golang:1.21-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache gcc musl-dev sqlite-dev

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o webapi ./cmd/webapi

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates sqlite

# Set working directory
WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /app/webapi .

# Copy any necessary config files
COPY --from=builder /app/demo/config.yml ./demo/

# Create directory for database
RUN mkdir -p /data

# Expose port
EXPOSE 3000

# Set environment variables
ENV CFG_DB_FILENAME=/data/app.db
ENV PORT=3000

# Run the application
CMD ["./webapi"]
