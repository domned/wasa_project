# list of chats for user(sorted in rev cron), each element
# of list contains username or group name, prof pic, eta of
# last mess preview of last txt or icon for im
# user can start convo with any other, auto add to list
# can search via username and see all usernames
# can create group and add others, not admin cannot search
# or add themselves to group, can leave group
# convo returns all messages in rev cron with timestamp, content, sender
# username or checkmark(sender/receiver), reaction and user who posted
# WASAText
# Addendum
# OpenAPI for simplified login
---
openapi: 3.0.3
info:
  title: Simplified login API specification
  description: |-
      This OpenAPI document describes the simplified login API.
      Copy and paste the API from the `paths` key to your OpenAPI document.
  version: "1"
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Maria
                pattern: 'Ë†.*?$'
                minLength: 3
                maxLength: 16
        required: true
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
            schema:
                type: object
                properties:
                  identifier:
                    # change here if you decide to use an integer
                    # or any other type of identifier
                    type: string
                    example: "abcdef012345"

  /users/me:
    put:
      tags: ["user"]
      summary: Set the current user's username
      operationId: setMyUserName
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Username updated successfully
        '400':
          description: Bad request - Username already in use
        '401':
          description: Unauthorized - User is not authenticated
        '500':
          description: Internal server error

  /users/me/conversations:
    get:
      tags: [conversations]
      summary: Retrieve conversations list
      operationId: getMyConversations
      responses:
        "200":
          description: list of conversations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: string
                      description: name of the user or group
                    pic:
                      type: string
                      description: group or profile picture
                    eta:
                      type: string
                      format: date-time
                    latest_msg:
                      type: string
                      description: |-
                        returns the latest message or an icon for pics
  
  /users/me/conversations/{conversationId}:
    post:
      tags: [conversations]
      summary: start a new conversation
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: input name of the user to start a new conversation
      responses:
        "201":
          description: new chat initialized
          content:
            application/json:
              schema:
                type: string
                description: conversation id
        "401":
          description: user does not exist
        "404":
          description: user not found


  /users/me/groups/{groupId}:
    post:
      tags: [groups]
      summary: create a new group
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  user:
                    type: string
        required: true

      responses:
        "201":
          description: group succesfully created
        
    get:
      tags: [groups]
      summary: get group list
      responses:
        "200":
          description: group list
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: string
                  admin:
                    type: string
        "404":
          description: no groups found
        

  /users/me/conversations/{conversationId}/messages:

    post: 
      tags: [messages]
      summary: send a new message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  type: string
                content:
                  type: string
        required: true

      responses:
        "201":
          description: message sent
        "400":
          description: user id not found

    delete:
      tags: [messages]
      summary: delete a message sent by user
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized

  /users:
    get:
      tags: [users]
      description: returns the list of all existing users
      operationId: getUsersNames
      responses:
        "200":
          description: list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: name of the user
        "404":
          description: no users found